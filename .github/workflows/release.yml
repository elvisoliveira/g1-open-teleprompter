name: Build and Release APK

on:
  push:
    tags:
      - 'v*' # Triggers on version tags like v1.0.0
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '21'
        cache: 'npm'

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install dependencies
      run: npm ci

    - name: Setup Expo CLI
      run: npm install -g @expo/cli

    - name: Prebuild Android
      run: npx expo prebuild --platform android

    - name: Grant execute permission to gradlew
      run: chmod +x android/gradlew

    - name: Clean and Build APK
      working-directory: android
      run: |
        ./gradlew assembleRelease

    - name: Get release info
      id: release_info
      run: |
        if [ "${{ github.event_name }}" = "push" ] && [ "${{ startsWith(github.ref, 'refs/tags/') }}" = "true" ]; then
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "release_name=Release ${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "tag_name=v$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
          echo "release_name=Development Build $(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release_info.outputs.tag_name }}
        release_name: ${{ steps.release_info.outputs.release_name }}
        body: |
          G1 OpenTeleprompter - React Native teleprompter app for Even Realities G1 smart glasses.
          
          Download the APK below and install on your Android device.
        draft: false
        prerelease: ${{ github.event_name == 'workflow_dispatch' }}

    - name: Find APK file
      id: find_apk
      run: |
        APK_PATH=$(find android/app/build/outputs/apk/release -name "*.apk" | head -1)
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
        echo "apk_name=teleprompter-${{ steps.release_info.outputs.tag_name }}.apk" >> $GITHUB_OUTPUT

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.find_apk.outputs.apk_path }}
        asset_name: ${{ steps.find_apk.outputs.apk_name }}
        asset_content_type: application/vnd.android.package-archive

    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: teleprompter-apk-${{ steps.release_info.outputs.tag_name }}
        path: ${{ steps.find_apk.outputs.apk_path }}
        retention-days: 30
